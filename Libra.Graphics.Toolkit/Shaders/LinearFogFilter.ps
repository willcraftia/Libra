cbuffer PerScene : register(b0)
{
    // FogGradient  = -1 / (End - Start)
    // FogIntercept = End / (End - Start)

    float  FogGradient      : packoffset(c0.x);
    float  FogIntercept     : packoffset(c0.y);

    float3 FogColor         : packoffset(c1);
    float  FarClipDistance  : packoffset(c1.w);
};

Texture2D<float4> Texture           : register(t0);
Texture2D<float>  LinearDepthMap    : register(t1);

SamplerState TextureSampler         : register(s0);
SamplerState LinearDepthMapSampler  : register(s1);

float4 PS(float2 texCoord : TEXCOORD0,
          float3 viewRay  : TEXCOORD1) : SV_Target
{
    float depth = LinearDepthMap.SampleLevel(LinearDepthMapSampler, texCoord, 0);

    float4 color = Texture.Sample(TextureSampler, texCoord);

    if (0 < FarClipDistance && FarClipDistance <= depth)
        return color;

    // 座標 (ビュー空間)
    float3 position = viewRay * depth;

    // 視点からの距離。
    float d = length(position);

    float fogFactor = saturate(d * FogGradient + FogIntercept);

    return lerp(float4(FogColor, 1), color, fogFactor);
}
