cbuffer PerObject : register(b0)
{
    // 線形深度を用いている場合、深度 1 に対する密度を表す。
    float Density;
};

Texture2D<float> FrontFogDepthMap   : register(t0);
Texture2D<float> BackFogDepthMap    : register(t1);

SamplerState FrontFogDepthMapSampler    : register(s0);
SamplerState BackFogDepthMapSampler     : register(s1);

struct Input
{
    float4 Position     : SV_Position;
    float4 PositionWVP  : TEXCOORD0;
};

float4 PS(Input input) : SV_Target0
{
    float2 texCoord = input.PositionWVP.xy / input.PositionWVP.w * float2(0.5, -0.5) + float2(0.5, 0.5);

    float front = FrontFogDepthMap.Sample(FrontFogDepthMapSampler, texCoord);
    float back = BackFogDepthMap.Sample(BackFogDepthMapSampler, texCoord);

    float level = saturate((back - front) * Density);

    return float4(level, 0, 0, 0);
}
