#define KERNEL_SIZE 4

cbuffer PerRenderTarget : register(b0)
{
    float2 Offsets[KERNEL_SIZE];
};

// ダンプ描画フィルタではレジスタ #0 を使用しない。
Texture2D<float3> NormalMap : register(t1);
SamplerState NormalMapSampler : register(s1);

float4 PS(float2 texCoord : TEXCOORD0) : SV_Target
{
    float3 source = NormalMap.SampleLevel(NormalMapSampler, texCoord, 0);
    source = normalize(source);

    float3 sum = 0;

    [unroll]
    for (int i = 0; i < KERNEL_SIZE; i++)
    {
        float3 sample = NormalMap.SampleLevel(NormalMapSampler, texCoord + Offsets[i], 0);
        sample = normalize(sample);

        sum += saturate(1 - dot(source, sample));
    }

    return float4(sum, 1);
}
